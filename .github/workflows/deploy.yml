name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci || npm install

      # Generate a unique build ID based on timestamp and commit hash
      - name: Generate build ID
        id: build_id
        run: echo "BUILD_ID=$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build with cache busting
        run: |
          # Pass build ID to the build process
          VITE_BUILD_ID=${{ env.BUILD_ID }} npm run build
          
          # Add build ID to index.html for cache busting
          sed -i "s|</head>|<meta name=\"build-id\" content=\"${{ env.BUILD_ID }}\">\n</head>|g" dist/index.html
          
          # Add timestamp comments to all HTML files
          find dist -name "*.html" -exec sh -c "echo '<!-- Build: ${{ env.BUILD_ID }} - $(date) -->' >> {}" \;

      - name: Create cache control files
        run: |
          # Create _headers file for CDN/hosting platforms that support it
          cat > dist/_headers << EOL
          /*
            Cache-Control: no-cache, no-store, must-revalidate
            
          *.js
            Cache-Control: public, max-age=31536000, immutable
            
          *.css
            Cache-Control: public, max-age=31536000, immutable
          EOL
          
          # Create .htaccess for Apache servers
          cat > dist/.htaccess << EOL
          <FilesMatch "index\.html$">
            Header set Cache-Control "no-cache, no-store, must-revalidate"
            Header set Pragma "no-cache"
            Header set Expires "0"
          </FilesMatch>
          
          <FilesMatch "\.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$">
            Header set Cache-Control "public, max-age=31536000, immutable"
          </FilesMatch>
          EOL

      - name: Create 404.html file
        run: cp dist/index.html dist/404.html

      - name: Create CNAME file
        run: echo 'nilo.chat' > dist/CNAME

      - name: Debug - List dist contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist
          echo "Contents of CSS directory:"
          ls -la dist/css
          echo "JavaScript files in dist:"
          ls -la dist/*.js

      # Direct git commit approach for more reliable deployments
      - name: Deploy to GitHub Pages
        run: |
          cd dist
          git init
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Deploy to GitHub Pages with build ID ${{ env.BUILD_ID }}"
          git push -f https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git HEAD:gh-pages